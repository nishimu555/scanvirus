name: "Scan virus"
description: "Scan virus by Clamav"

# https://docs.clamav.net/manual/Installing/Docker.html
# https://clamav-jp.osdn.jp/jdoc/clamav.html#c3.2.1

# test virus
# https://downloadcenter.trendmicro.com/index.php?regs=jp&prodid=1424

inputs:
  scan-dir:  
    description: "Specify scan directory"
    required: true
    default: ""
  work-dir:
    description: "Specify work directory"
    required: false
    default: "/tmp"
  log-file:
    description: "Specify the path and name of the log file"
    required: false
    default: "/tmp/result.log"
  report-file:
    description: "Specify the path and name of the report file"
    required: false
    default: "/tmp/report.log"

outputs:
  report-file:
    description: "Report file location"
    value: ${{ inputs.report-file }}

runs:
  using: "composite"
  steps:
    - name: scan clamav
      id: scan_clamav
      run: |
        scandir=${{ inputs.scan-dir }}
        docker run \
          --rm \
          --mount type=bind,source=$scandir,target=/scandir \
          --mount type=bind,source=${{ inputs.work-dir }},target=${{ inputs.work-dir }} \
          clamav/clamav:0.105 \
          freshclam --on-update-execute="clamscan -r -l ${{ inputs.log-file }} /scandir"
      shell: bash

    - name: check result
      id: check_result
      run: |
          echo "[scan result]"
          cat ${{ inputs.log-file }}

          failed_check=$(cat ${{ inputs.log-file }} | grep FOUND | wc -m | awk '{print $1}')

          # FOUNDが1件でもあったらjobを失敗させる
          if [ ${failed_check} -ne 0 ]; then
            echo "*****************************"
            echo "[Failed] virus is existed !!!"
            echo "*****************************"

            echo "# Virus Report" > ${{ inputs.report-file }}
            echo "## ScanDir" >> ${{ inputs.report-file }}
            echo "- ${{ inputs.scan-dir }}" >> ${{ inputs.report-file }}
            echo "## ScanResult" >> ${{ inputs.report-file }}
            cat ${{ inputs.log-file }} >> ${{ inputs.report-file }}

            exit 1
          fi

      shell: bash -xe
